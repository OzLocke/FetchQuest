<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_controllerIcon</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Configure variables and launch controller script
global.page = "homeInterior"

//Array is button number on the left, and target, inventoryGet, inventoryNeed,
//and inventoryMissingTarget, on the right

buttonControls[0,0] = "homeLockedDoor";
buttonControls[0,1] = "NOTHING";
buttonControls[0,2] = "NOTHING";
buttonControls[0,3] = "NOTHING";

buttonControls[1,0] = "homeExterior";
buttonControls[1,1] = "NOTHING";
buttonControls[1,2] = "NOTHING";
buttonControls[1,3] = "NOTHING";

buttonControls[2,0] = "homeBed";
buttonControls[2,1] = "NOTHING";
buttonControls[2,2] = "favouriteBone";
buttonControls[2,3] = "NOTHING";

buttonControls[3,0] = "NOTHING";
buttonControls[3,1] = "favouriteBone";
buttonControls[3,2] = "NOTHING";
buttonControls[3,3] = "NOTHING";

buttonControls[4,0] = "NOTHING";
buttonControls[4,1] = "homeInteriorMissing_favouriteBone";
buttonControls[4,2] = "NOTHING";
buttonControls[4,3] = "NOTHING";

//Run screen controller script
if(room == rm_main) script_execute(scr_controller);

//Define variables for running button press functions
target = "homeLockedDoor";
inventoryGet = "NOTHING";
inventoryNeed = "NOTHING";
inventoryMissingTarget = "NOTHING";
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Set screen display

base_width = room_width;
base_height = room_height;
width = base_width;
height = base_height;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Build state buttons
if(room = rm_main){
    
    with(instance_create(2400, 94, obj_stateButton)){
        target = "Quit";
        instance_create(x, y, obj_stateText);
    };
    
};
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Reset button and start timer to move to new screen
stateButton.y -= 8;
alarm_set(1, 2);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Change page variable and return controller script
if(room == rm_startScreen){
    room_goto(rm_main);
} else if(target = "Quit"){
    room_goto(rm_startScreen);
} else {

    //---Get new items---
    if(inventoryGet != "NOTHING"){
    
        //Check for item in inventory and add it if it's not there
        ini_open(inventory.ini);
        if(ini_read_real(inventoryGet,"found", "") == 0){
            ini_write_real(inventoryGet, "found", 1); 
        }
    }
    
    //---Check for required items---
    if(inventoryNeed != "NOTHING"){
    
        //Check for required item and reset target if it's not there
        if(ini_read_real(inventoryNeed, "found", "") == 0){
            target = inventoryMissingTarget;
        };
    };
    
    //---Set new page---
    global.page = target;
    script_execute(scr_controller)
};



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Reset button and start timer to move to new screen
choiceButton.y -= 8;
alarm_set(1, 2);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Scale canvas


//DISABLED AS IT WAS CAUSING PROBLEMS ON SMALLER SCREENS

///Scale canvas
if (browser_width != width || browser_height != height)
    {
    width = min(base_width, browser_width);
    height = min(base_height, browser_height);
    scr_scaleCanvas(base_width, base_height, width, height, true);
    }
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Functionality for clicking buttons

if(mouse_check_button_released(mb_left)){

    choiceButton = instance_position(mouse_x, mouse_y, obj_choiceButton);
    if(choiceButton != noone){
        choiceButton.y += 8;
        
        target = buttonControls[choiceButton.buttonNumber,0];
        inventoryGet = buttonControls[choiceButton.buttonNumber,1];
        inventoryNeed = buttonControls[choiceButton.buttonNumber,2];
        inventoryMissingTarget = buttonControls[choiceButton.buttonNumber,3];
        
        alarm_set(0,2);
    };
    
    stateButton = instance_position(mouse_x, mouse_y, obj_stateButton);
    if(stateButton != noone){
        stateButton.y += 8;
        target = stateButton.target;
        alarm_set(2,2);
    };
};
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
